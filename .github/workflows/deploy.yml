name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: self-hosted
    environment: Staging

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -f "src/Portfolio.Authorization.Service/Dockerfile" -t portfolio-auth-service . \
        --build-arg DB_HOST=${{ vars.DB_ADDRESS }} \
        --build-arg DB_NAME=${{ secrets.DB_NAME }} \
        --build-arg DB_PORT=${{ vars.DB_PORT }} \
        --build-arg DB_USER=${{ secrets.DB_USER }} \
        --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
        --build-arg DB_KEEPALIVE=${{ vars.DB_KEEPALIVE }}
  
  CodeQuality-Raport:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
    - uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarScanner for .NET 8 with pull request decoration support
      uses: highbyte/sonarscan-dotnet@v2.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        # The key of the SonarQube project
        sonarProjectKey: piotreksda_Portfolio.Backend_AYw6dqi0Psjv5HmFi5YB
        # The name of the SonarQube project
        sonarProjectName:  Portfolio.Backend
        # The SonarQube server URL. For SonarCloud, skip this setting.
        sonarHostname:  https://sonarqube.piotrbartczak.tech/

  deploy:
    runs-on: self-hosted
    needs: CodeQuality-Raport
    if: github.event_name == 'push'
    environment: Staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Docker container
        run: |
          # Stopping any previous instance of the container (optional)
          docker stop portfolio-auth-service-container || true
          docker rm portfolio-auth-service-container || true

          # Running the Docker image
          docker run -d --name portfolio-auth-service-container -p 35010:5000 --network=${{ vars.DOCKER_NETWORK}} --ip=${{vars.DOCKER_IP}} portfolio-auth-service
        